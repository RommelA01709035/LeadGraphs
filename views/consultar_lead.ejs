
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Consultar Leads</title>
    <!-- Enlace a Bulma CDN -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css">
    <script src="https://kit.fontawesome.com/ec8ea11f65.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="/css/estilos.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <style>
        /* Estilo personalizado para la sombra de la tabla */
        .table-shadow {
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1); /* Ajusta los valores según prefieras */
            border: #6949f6;
        }

        .has-background-danger td {
            color: white; /* Hace que el texto sea blanco */
        }

        
        .has-background-danger {
            border: 2px solid #000000; /* Cambia el color del borde según tu preferencia */
        }

        .table-shadow td,
        .table-shadow th {
            border-right: 2px solid #000000; /* Color del borde vertical */
        }


        /* Estilo personalizado para cambiar el color de los botones */
        .custom-button {
            background-color: #F649D0;
            color: white;
            transition: background-color 0.3s ease; /* Transición suave del color de fondo */
        }

        /* Cambia el color de fondo cuando se pasa el cursor sobre el botón */
        .custom-button:hover {
            background-color: #F8C9EE; /* Cambia el color a un tono más claro */
            color: white;
        }

            /* Establecer una altura fija para el cuerpo de la tabla */
        .table-body {
            max-height: 700px; /* Establece aquí la altura máxima deseada */
            overflow-y: auto; /* Agrega scroll vertical si el contenido excede la altura */
        }

        .notification-container {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1000; 
        }

        .control {
            border: 2px solid #000000; /* Color del contorno (rojo en este caso) */
            border-radius: 5px; /* Ajusta el radio de borde según sea necesario */
        }
    </style>
</head>

<body>
    <%- include('includes/naveside.ejs', {roles: roles}) %>
        <div class="main-content">
            <div class="columns">
                <section class="section">
                    <div class="container">
                        <div class="notification-container">
                            <% if (message) { %>
                                <div class="notification is-success">
                                    <%= message %>
                                </div>
                            <% } %>
                        </div>
                        <h1 class="title">Consultar Leads</h1>

                        <div class="is-flex" style="justify-content: space-between;">
                            <!-- Barra de búsqueda -->
                            <div class="control">
                                <input id="buscar" class="input is-info" type="text" placeholder="Buscar..."/>
                            </div>
                        
                        </div>
                            <br><br>
                        <div>
                            <!-- Botón para agregar leads -->
                            <a href="/importar/agregar-lead" class="button is-info">Crear Lead</a>
                        </div>
                        <br><br>
                        
                        <!-- Contenedor para mostrar los resultados de la búsqueda -->
                        <input type="hidden" id="_csrf" name="_csrf" value="<%= csrfToken %>" >
                        <div id="respuesta_ajax" class="table-body">
                            <% if (leads.length < 1) { %>
                                <!-- Mensaje si no se encuentran leads -->
                                <div class="notification is-info">
                                    <button class="delete"></button>
                                    No se encontraron leads.            
                                </div>
                            <% } else { %>
                                <!-- Contenedor para los leads encontrados -->
                            
                                <table class="table is-fullwidth is-hoverable">
                                    <thead>
                                        <tr>
                                            <th>Nombre</th>
                                            <th>Correo</th>
                                            <th>Compañía</th>
                                            <th>Teléfono</th>
                                            <th>Seller Asignado</th>
                                            <th>Último Mensaje</th>
                                            <th>Hora Último Mensaje</th>
                                            <th>Acciones</th> <!-- Agregado para los botones de acción -->
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% for (let lead of leads) { %>
                                            <tr>
                                                <td><%= lead.Nombre %></td>
                                                <td><%= lead.Correo %></td>
                                                <td><%= lead.Compania %></td>
                                                <td><%= lead.Telefono %></td>
                                                <td><%= lead.Seller_Asignado %></td>
                                                <td><%= lead.Ultimo_Mensaje %></td>
                                                <td><%= lead.Hora_Ultimo_Mensaje %></td>
                                                <td>
                                                    <!-- Botones de acción -->
                                                    <div class="buttons">
                                                        <% if (lead) { %>
                                                            <!-- Botón para modificar el lead -->
                                                            <a href="/importar/modificar-lead/<%= lead.IDLead %>" class="button is-info">Modificar</a>
                                                        <% } else { %>
                                                            <!-- Si no se encuentra el lead -->
                                                            <p>Lead no encontrado</p>
                                                        <% } %>
                                                        <% for (let permiso of roles){ %>
                                                            <% if (permiso.Accion == 'Eliminar Lead') { %>
                                                                <button class="button is-danger" onclick="confirmDelete(<%= lead.IDLead %>)">Eliminar</button>
                                                            <% } %>
                                                        <% } %>
                                                    </div>
                                                </td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            <% } %>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>

    <!-- Script para la solicitud AJAX -->
    <script>
        const buscarLeads = () => {
            const valor_busqueda = document.getElementById('buscar').value;

            // Realizar la solicitud AJAX
            fetch(`/importar/buscar/${encodeURIComponent(valor_busqueda)}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            }).then((result) => {

                // Convertir la respuesta a JSON
                return result.json(); 
                
            }).then((data) => {

                // Procesar la respuesta y actualizar el DOM
                const respuestaHtml = data.map(lead => `
                    <tr>
                        <td>${lead.Nombre}</td>
                        <td>${lead.Correo}</td>
                        <td>${lead.Compania}</td>
                        <td>${lead.Telefono}</td>
                        <td>${lead.Seller_Asignado}</td>
                        <td>${lead.Ultimo_Mensaje}</td>
                        <td>${lead.Hora_Ultimo_Mensaje}</td>
                        <td>
                            <!-- Botones de acción -->
                            <a href="/importar/modificar-lead/${lead.IDLead}" class="button is-info">Modificar</a>
                            <button class="button is-danger" onclick="confirmDelete('${lead.IDLead}')">Eliminar</button>
                        </td>
                    </tr>`).join('');
                document.getElementById('respuesta_ajax').innerHTML = `
                    <table class="table is-fullwidth is-hoverable">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Correo</th>
                                <th>Compañía</th>
                                <th>Teléfono</th>
                                <th>Seller Asignado</th>
                                <th>Último Mensaje</th>
                                <th>Hora Último Mensaje</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${respuestaHtml}
                        </tbody>
                    </table>`;
            }).catch(err => {
                console.log(err);
            });
        };

    document.getElementById('buscar').addEventListener('input', buscarLeads);
    </script>
    
    <script>
        function confirmDelete(leadId) {
            Swal.fire({
                title: "¿Estás seguro?",
                text: "¡No podrás revertir esto!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Sí, eliminarlo"
            }).then((result) => {
                if (result.isConfirmed) {
                    //document.getElementById("deleteForm_" + leadId).submit();
                    console.log('Eliminar lead ha sido seleccionado');
                    eliminar(leadId);
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
            const notifications = document.querySelectorAll('.notification');

            notifications.forEach(notification => {
                const closeButton = notification.querySelector('.delete');

                closeButton.addEventListener('click', function () {
                    notification.remove(); 
                });

                setTimeout(function () {
                    notification.remove(); 
                }, 5000);
            });
        });

        const eliminar = (IDLead) => {
            console.log('lead a eliminar', IDLead);

            const csrf = document.getElementById('_csrf').value;
            const valor_busqueda = document.getElementById('buscar').value;

            // Realizar la solicitud de eliminacion de lead
            fetch('/importar/eliminar-lead', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'csrf-token': csrf
                },
                body: JSON.stringify({IDLead: IDLead}) // Para enviar JSON al body
            }).then(result => {
                return result.json();
            }).then(data => {
                console.log(data);
                // Procesar la respuesta y actualizar el DOM
                const respuestaHtml = data.leads.map(lead => `
                    <tr>
                        <td>${lead.Nombre}</td>
                        <td>${lead.Correo}</td>
                        <td>${lead.Compania}</td>
                        <td>${lead.Telefono}</td>
                        <td>${lead.Seller_Asignado}</td>
                        <td>${lead.Ultimo_Mensaje}</td>
                        <td>${lead.Hora_Ultimo_Mensaje}</td>
                        <td>
                            <!-- Botones de acción -->
                            <a href="/importar/modificar-lead/${lead.IDLead}" class="button is-info">Modificar</a>
                            <button class="button is-danger" onclick="confirmDelete('${lead.IDLead}')">Eliminar</button>
                        </td>
                    </tr>`).join('');
                document.getElementById('respuesta_ajax').innerHTML = `
                    <table class="table is-fullwidth is-hoverable">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Correo</th>
                                <th>Compañía</th>
                                <th>Teléfono</th>
                                <th>Seller Asignado</th>
                                <th>Último Mensaje</th>
                                <th>Hora Último Mensaje</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${respuestaHtml}
                        </tbody>
                    </table>`;

                // Volver a realizar la búsqueda con el término almacenado
                buscarLeads();

                // Mostrar el mensaje si está presente
                if (data.message) {
                    const notificationContainer = document.querySelector('.notification-container');
                    const notification = document.createElement('div');
                    notification.classList.add('notification', 'is-success');
                    notification.innerHTML = `
                        ${data.message}
                        <button class="delete"></button>`;
                    notificationContainer.appendChild(notification);

                    // Eliminar la notificación después de un tiempo
                    setTimeout(() => {
                        notification.remove();
                    }, 5000);
                }

                if(data.error) {
                    const notificationContainer = document.querySelector('.notification-container');
                    const notification = document.createElement('div');
                    notification.classList.add('notification', 'is-danger');
                    notification.innerHTML = `
                        ${data.error}
                        <button class="delete"></button>`;
                    notificationContainer.appendChild(notification);

                    // Eliminar la notificación después de un tiempo
                    setTimeout(() => {
                        notification.remove();
                    }, 5000);
                }
            }).catch(err => {
                console.log(err);
            });
        }
    </script>
</body>
</html>