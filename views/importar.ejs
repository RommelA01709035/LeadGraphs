<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Consultar Leads</title>
    <!-- Enlace a Bulma CDN -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css">
    <script src="https://kit.fontawesome.com/ec8ea11f65.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="/css/estilos.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <style>
        /* Estilo personalizado para la sombra de la tabla */
        .table-shadow {
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1); /* Ajusta los valores según prefieras */
            border: #6949f6;
        }

        .has-background-danger td {
            color: white; /* Hace que el texto sea blanco */
        }

        
        .has-background-danger {
            border: 2px solid #000000; /* Cambia el color del borde según tu preferencia */
        }

        .table-shadow td,
        .table-shadow th {
            border-right: 2px solid #000000; /* Color del borde vertical */
        }


        /* Estilo personalizado para cambiar el color de los botones */
        .custom-button {
            background-color: #F649D0;
            color: white;
            transition: background-color 0.3s ease; /* Transición suave del color de fondo */
        }

        /* Cambia el color de fondo cuando se pasa el cursor sobre el botón */
        .custom-button:hover {
            background-color: #F8C9EE; /* Cambia el color a un tono más claro */
            color: white;
        }

            /* Establecer una altura fija para el cuerpo de la tabla */
        .table-body {
            max-height: 700px; /* Establece aquí la altura máxima deseada */
            overflow-y: auto; /* Agrega scroll vertical si el contenido excede la altura */
        }

        .notification-container {
            position: fixed;
            bottom: 50px; /* Distancia desde la parte inferior */
            right: 20px; /* Distancia desde el borde derecho */
            max-width: 300px; /* Anchura máxima del contenedor */
            transform: translate(0, 0); /* Ajuste de posición */
            z-index: 1000; 
        }

        .control {
            border: 2px solid #000000; /* Color del contorno (rojo en este caso) */
            border-radius: 5px; /* Ajusta el radio de borde según sea necesario */
        }
    </style>
</head>

<body>
    <%- include('includes/naveside.ejs', {roles: roles}) %>
        <div class="main-content">
            <div class="columns is-centered">
                <div class="column is-vcentered">
                    <section class="section">
                        <div class="container">
                            <h1 class="title">Sección de importación</h1>

                            <div class="is-flex" style="justify-content: space-between;">
                                <div class="buttons">
                                    <a href="/importar/leads">
                                        <span class="file-cta button is-info"> <!-- Clase modificada a "button is-success" -->
                                            <span class="icon">
                                                <i class="fa-solid fa-book-open"></i>
                                            </span>
                                            <span class="file-label">
                                                Consultar Leads
                                            </span>
                                        </span>
                                    </a>
                                </div>
                                <div>
                                    <a href="/homepage" class="button is-danger">Cancelar</a>
                                </div>
                            </div>
                        </div>
                        <div class="container">

                            <div class="box content-box has-text-centered">
                                <div class="columns is-centered">
                                    <div class="column is-narrow">
                                        <figure class="image is-128x128">
                                            <img src="/multimedia/CSVIcono.png" />
                                        </figure>
                                    </div>
                                </div>
    
                                <p class="is-size-3">Selecciona un archivo de extensión <strong>.csv</strong> para comenzar la importación. Es importante que el archivo cuente con encabezados</p><br>
                                <p class="is-size-5 mb-2">Una vez que hayas importado el archivo, puedes consultar por medio del apartado de consulta.</p>
                                <form action="/importar" method="POST" enctype="multipart/form-data">
                                    <input type="hidden" id="_csrf" name="_csrf" value="<%= csrfToken %>">
                                    <div class="file is-centered">
                                        <label class="file-label has-text-succes">
                                            <input class="file-input" type="file" name="csvFile" id="fileInput">
                                            <span class="file-cta button is-success" id="fileCta">
                                                <span class="file-icon">
                                                    <i class="fas fa-upload"></i>
                                                </span>
                                                <span class="file-label" id="fileLabel">
                                                    Seleccionar archivo…
                                                </span>
                                            </span>
                                        </label>
                                    </div>
                                    <div class="columns is-centered mt-auto">
                                        <div class="column is-narrow">
                                            <input class="button is-success" type="submit" value="Subir archivo">
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                        


                    </section>
                </div>
            </div>
        </div>
        <div class="notification-container mb-4 is-fixed-bottom is-right">
            <div id="message-container"></div>
        </div>
    </div>
    

    <script>

        // Obtener los inputs de archivo y span del botón
        const fileInput = document.getElementById('fileInput');
        const fileLabel = document.getElementById('fileLabel');
        const fileCta = document.getElementById('fileCta');

        fileInput.addEventListener('change', function() {

            // Verificar que se ha seleccionado un archivo
            if(fileInput.files.length > 0){

                // Obtener el nombre del archivo seleccionado
                const fileName = fileInput.files[0].name;

                // Actualizar el texto del span con el nombre del archivo
                fileLabel.textContent = fileName;

                // Cambiar el color del botón
                fileCta.classList.remove('is-success');
                fileCta.classList.add('is-info');
            } else {
                fileLabel.textContent = 'Seleccionar archivo...'

                // Restablecer el color del botón al verde
                fileCta.classList.remove('is-info');
                fileCta.classList.add('is-success');
            }
        });

        const form = document.querySelector('form');

        form.addEventListener('submit', (event) => {
            event.preventDefault();
            const csrf = document.getElementById('_csrf').value;
            const formData = new FormData(form);
            fetch('/importar', {
                method: 'POST',
                body: formData,
                headers: {
                    'csrf-token': csrf
                },
            })
            .then(response => response.json())
            .then(data => {

                // Manejar la respuesta JSON aquí
                console.log(data);

                // Actualizar la vista con el mensaje de respuesta
                const messageContainer = document.getElementById('message-container');
                if(data.success){
                    messageContainer.innerHTML = `
                        <div class="notification is-success">
                            ${data.message}
                            <button class="delete" aria-label="delete"></button>
                        </div>
                    `;
                } else {
                    messageContainer.innerHTML = `
                        <div class="notification is-danger">
                            ${data.message}
                            <button class="delete" aria-label="delete"></button>
                        </div>
                    `;
                }

                // Obtener las notificaciones actualizadas después de la inserción de los botones de cerrar
                const notifications = document.querySelectorAll('.notification');

                // Agregar el evento de clic para eliminar manualmente las notificaciones
                notifications.forEach(notification => {
                    const closeButton = notification.querySelector('.delete');

                    closeButton.addEventListener('click', function () {
                        notification.remove(); 
                    });

                    setTimeout(function () {
                        notification.remove(); 
                    }, 60000);
                });
            })
            .catch(error => {
                console.error('Error al enviar la solicitud:', error);
            });
        });
    </script>

</body>
</html>